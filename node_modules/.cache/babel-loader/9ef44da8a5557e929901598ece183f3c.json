{"ast":null,"code":"var _jsxFileName = \"/Users/sze/Desktop/clone-whatsapp/chatroom/src/Chat.js\";\nimport React, { useEffect, useState } from 'react';\nimport { Avatar, IconButton } from '@material-ui/core';\nimport DonutLargeIcon from '@material-ui/icons/DonutLarge';\nimport ChatIcon from '@material-ui/icons/Chat';\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\nimport InsertEmoticonIcon from '@material-ui/icons/InsertEmoticon';\nimport MicIcon from '@material-ui/icons/Mic';\nimport { useParams } from 'react-router-dom';\nimport './Chat.css';\nimport db from './firebase';\nimport firebase from 'firebase';\nimport { useStateValue } from './StateProvider';\nexport default function Chat() {\n  var _messages, _messages$time;\n\n  const [input, setInput] = useState('');\n  const [seed, setSeed] = useState('');\n  const {\n    roomId\n  } = useParams();\n  const [roomName, setRoomName] = useState('');\n  const [messages, setMessages] = useState([]);\n  const [currentTime, setcurrentTime] = useState('');\n  const [{\n    user\n  }, dispatch] = useStateValue();\n  useEffect(() => {\n    const today = new Date();\n    const time = (today.getHours() < 10 ? '0' : '') + today.getHours() + ':' + (today.getMinutes() < 10 ? '0' : '') + today.getMinutes();\n    setcurrentTime(time);\n  });\n  useEffect(() => {\n    if (roomId) {\n      db.collection('rooms').doc(roomId).onSnapshot(snapshot => {\n        setRoomName(snapshot.data().name);\n      });\n      db.collection('rooms').doc(roomId).collection('message').orderBy('time', 'asc').onSnapshot(snapshot => setMessages(snapshot.docs.map(doc => doc.data())));\n    }\n  }, [roomId]);\n  useEffect(() => {\n    setSeed(Math.floor(Math.random() * 5000));\n  }, []);\n\n  const sendMessage = e => {\n    if (input !== '') {\n      e.preventDefault();\n      db.collection('rooms').doc(roomId).collection('message').add({\n        message: input,\n        name: user.displayName,\n        time: firebase.firestore.FieldValue.serverTimestamp()\n      });\n      setInput('');\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"chat\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"chat__header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(Avatar, {\n    src: `https://avatars.dicebear.com/api/human/${seed}.svg`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"chat__headerInfo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 6\n    }\n  }, roomName), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 6\n    }\n  }, new Date((_messages = messages[messages.length - 1]) === null || _messages === void 0 ? void 0 : (_messages$time = _messages.time) === null || _messages$time === void 0 ? void 0 : _messages$time.toDate()).toUTCString())), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"chat__headerRight\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(IconButton, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 6\n    }\n  }, /*#__PURE__*/React.createElement(DonutLargeIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }\n  })), /*#__PURE__*/React.createElement(IconButton, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 6\n    }\n  }, /*#__PURE__*/React.createElement(ChatIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }\n  })), /*#__PURE__*/React.createElement(IconButton, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 6\n    }\n  }, /*#__PURE__*/React.createElement(MoreVertIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }\n  })))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"chat__body\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"chat__bodyContent\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"chat__timestamp\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 6\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }\n  }, currentTime)), messages.map((message, index) => /*#__PURE__*/React.createElement(\"div\", {\n    key: index,\n    className: `chat__info ${message.name === user.displayName && 'chat__receiver'}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: `${message.name === user.displayName && 'chat__receiverIcon'}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 8\n    }\n  }, /*#__PURE__*/React.createElement(Avatar, {\n    src: `https://avatars.dicebear.com/api/human/${seed}.svg`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"chat__message\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 8\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"chat__name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 9\n    }\n  }, message.name), message.message))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"chat__footer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"chat__footerWrap\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(InsertEmoticonIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 6\n    }\n  }), /*#__PURE__*/React.createElement(\"form\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 6\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    value: input,\n    onChange: e => {\n      setInput(e.target.value);\n    },\n    maxLength: \"200\",\n    type: \"text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: sendMessage,\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 7\n    }\n  })), /*#__PURE__*/React.createElement(MicIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 6\n    }\n  }))));\n}","map":{"version":3,"sources":["/Users/sze/Desktop/clone-whatsapp/chatroom/src/Chat.js"],"names":["React","useEffect","useState","Avatar","IconButton","DonutLargeIcon","ChatIcon","MoreVertIcon","InsertEmoticonIcon","MicIcon","useParams","db","firebase","useStateValue","Chat","input","setInput","seed","setSeed","roomId","roomName","setRoomName","messages","setMessages","currentTime","setcurrentTime","user","dispatch","today","Date","time","getHours","getMinutes","collection","doc","onSnapshot","snapshot","data","name","orderBy","docs","map","Math","floor","random","sendMessage","e","preventDefault","add","message","displayName","firestore","FieldValue","serverTimestamp","length","toDate","toUTCString","index","target","value"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,MAAT,EAAiBC,UAAjB,QAAmC,mBAAnC;AACA,OAAOC,cAAP,MAA2B,+BAA3B;AACA,OAAOC,QAAP,MAAqB,yBAArB;AACA,OAAOC,YAAP,MAAyB,6BAAzB;AACA,OAAOC,kBAAP,MAA+B,mCAA/B;AACA,OAAOC,OAAP,MAAoB,wBAApB;AACA,SAASC,SAAT,QAA0B,kBAA1B;AACA,OAAO,YAAP;AACA,OAAOC,EAAP,MAAe,YAAf;AACA,OAAOC,QAAP,MAAqB,UAArB;AACA,SAASC,aAAT,QAA8B,iBAA9B;AAEA,eAAe,SAASC,IAAT,GAAgB;AAAA;;AAC9B,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBd,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACe,IAAD,EAAOC,OAAP,IAAkBhB,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM;AAAEiB,IAAAA;AAAF,MAAaT,SAAS,EAA5B;AACA,QAAM,CAACU,QAAD,EAAWC,WAAX,IAA0BnB,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACoB,QAAD,EAAWC,WAAX,IAA0BrB,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACsB,WAAD,EAAcC,cAAd,IAAgCvB,QAAQ,CAAC,EAAD,CAA9C;AACA,QAAM,CAAC;AAAEwB,IAAAA;AAAF,GAAD,EAAWC,QAAX,IAAuBd,aAAa,EAA1C;AAEAZ,EAAAA,SAAS,CAAC,MAAM;AACf,UAAM2B,KAAK,GAAG,IAAIC,IAAJ,EAAd;AACA,UAAMC,IAAI,GACT,CAACF,KAAK,CAACG,QAAN,KAAmB,EAAnB,GAAwB,GAAxB,GAA8B,EAA/B,IACAH,KAAK,CAACG,QAAN,EADA,GAEA,GAFA,IAGCH,KAAK,CAACI,UAAN,KAAqB,EAArB,GAA0B,GAA1B,GAAgC,EAHjC,IAIAJ,KAAK,CAACI,UAAN,EALD;AAMAP,IAAAA,cAAc,CAACK,IAAD,CAAd;AACA,GATQ,CAAT;AAWA7B,EAAAA,SAAS,CAAC,MAAM;AACf,QAAIkB,MAAJ,EAAY;AACXR,MAAAA,EAAE,CAACsB,UAAH,CAAc,OAAd,EACEC,GADF,CACMf,MADN,EAEEgB,UAFF,CAEcC,QAAD,IAAc;AACzBf,QAAAA,WAAW,CAACe,QAAQ,CAACC,IAAT,GAAgBC,IAAjB,CAAX;AACA,OAJF;AAKA3B,MAAAA,EAAE,CAACsB,UAAH,CAAc,OAAd,EACEC,GADF,CACMf,MADN,EAEEc,UAFF,CAEa,SAFb,EAGEM,OAHF,CAGU,MAHV,EAGkB,KAHlB,EAIEJ,UAJF,CAIcC,QAAD,IACXb,WAAW,CAACa,QAAQ,CAACI,IAAT,CAAcC,GAAd,CAAmBP,GAAD,IAASA,GAAG,CAACG,IAAJ,EAA3B,CAAD,CALb;AAOA;AACD,GAfQ,EAeN,CAAClB,MAAD,CAfM,CAAT;AAiBAlB,EAAAA,SAAS,CAAC,MAAM;AACfiB,IAAAA,OAAO,CAACwB,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,IAA3B,CAAD,CAAP;AACA,GAFQ,EAEN,EAFM,CAAT;;AAIA,QAAMC,WAAW,GAAIC,CAAD,IAAO;AAC1B,QAAI/B,KAAK,KAAK,EAAd,EAAkB;AACjB+B,MAAAA,CAAC,CAACC,cAAF;AAEApC,MAAAA,EAAE,CAACsB,UAAH,CAAc,OAAd,EAAuBC,GAAvB,CAA2Bf,MAA3B,EAAmCc,UAAnC,CAA8C,SAA9C,EAAyDe,GAAzD,CAA6D;AAC5DC,QAAAA,OAAO,EAAElC,KADmD;AAE5DuB,QAAAA,IAAI,EAAEZ,IAAI,CAACwB,WAFiD;AAG5DpB,QAAAA,IAAI,EAAElB,QAAQ,CAACuC,SAAT,CAAmBC,UAAnB,CAA8BC,eAA9B;AAHsD,OAA7D;AAKArC,MAAAA,QAAQ,CAAC,EAAD,CAAR;AACA;AACD,GAXD;;AAaA,sBACC;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACC;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACC,oBAAC,MAAD;AAAQ,IAAA,GAAG,EAAG,0CAAyCC,IAAK,MAA5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,eAEC;AAAK,IAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKG,QAAL,CADD,eAEC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,IAAIS,IAAJ,cACAP,QAAQ,CAACA,QAAQ,CAACgC,MAAT,GAAkB,CAAnB,CADR,gEACA,UAA+BxB,IAD/B,mDACA,eAAqCyB,MAArC,EADA,EAECC,WAFD,EADF,CAFD,CAFD,eAUC;AAAK,IAAA,SAAS,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACC,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACC,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,CADD,eAIC,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACC,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,CAJD,eAOC,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACC,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,CAPD,CAVD,CADD,eAuBC;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACC;AAAK,IAAA,SAAS,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACC;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIhC,WAAJ,CADD,CADD,EAKEF,QAAQ,CAACmB,GAAT,CAAa,CAACQ,OAAD,EAAUQ,KAAV,kBACb;AACC,IAAA,GAAG,EAAEA,KADN;AAEC,IAAA,SAAS,EAAG,cACXR,OAAO,CAACX,IAAR,KAAiBZ,IAAI,CAACwB,WAAtB,IAAqC,gBACrC,EAJF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAMC;AACC,IAAA,SAAS,EAAG,GACXD,OAAO,CAACX,IAAR,KAAiBZ,IAAI,CAACwB,WAAtB,IAAqC,oBACrC,EAHF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAKC,oBAAC,MAAD;AACC,IAAA,GAAG,EAAG,0CAAyCjC,IAAK,MADrD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALD,CAND,eAeC;AAAG,IAAA,SAAS,EAAC,eAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACC;AAAM,IAAA,SAAS,EAAC,YAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA8BgC,OAAO,CAACX,IAAtC,CADD,EAEEW,OAAO,CAACA,OAFV,CAfD,CADA,CALF,CADD,CAvBD,eAqDC;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACC;AAAK,IAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACC,oBAAC,kBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,eAEC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACC;AACC,IAAA,KAAK,EAAElC,KADR;AAEC,IAAA,QAAQ,EAAG+B,CAAD,IAAO;AAChB9B,MAAAA,QAAQ,CAAC8B,CAAC,CAACY,MAAF,CAASC,KAAV,CAAR;AACA,KAJF;AAKC,IAAA,SAAS,EAAC,KALX;AAMC,IAAA,IAAI,EAAC,MANN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,eASC;AAAQ,IAAA,OAAO,EAAEd,WAAjB;AAA8B,IAAA,IAAI,EAAC,QAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IATD,CAFD,eAaC,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAbD,CADD,CArDD,CADD;AAyEA","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Avatar, IconButton } from '@material-ui/core';\nimport DonutLargeIcon from '@material-ui/icons/DonutLarge';\nimport ChatIcon from '@material-ui/icons/Chat';\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\nimport InsertEmoticonIcon from '@material-ui/icons/InsertEmoticon';\nimport MicIcon from '@material-ui/icons/Mic';\nimport { useParams } from 'react-router-dom';\nimport './Chat.css';\nimport db from './firebase';\nimport firebase from 'firebase';\nimport { useStateValue } from './StateProvider';\n\nexport default function Chat() {\n\tconst [input, setInput] = useState('');\n\tconst [seed, setSeed] = useState('');\n\tconst { roomId } = useParams();\n\tconst [roomName, setRoomName] = useState('');\n\tconst [messages, setMessages] = useState([]);\n\tconst [currentTime, setcurrentTime] = useState('');\n\tconst [{ user }, dispatch] = useStateValue();\n\n\tuseEffect(() => {\n\t\tconst today = new Date();\n\t\tconst time =\n\t\t\t(today.getHours() < 10 ? '0' : '') +\n\t\t\ttoday.getHours() +\n\t\t\t':' +\n\t\t\t(today.getMinutes() < 10 ? '0' : '') +\n\t\t\ttoday.getMinutes();\n\t\tsetcurrentTime(time);\n\t});\n\n\tuseEffect(() => {\n\t\tif (roomId) {\n\t\t\tdb.collection('rooms')\n\t\t\t\t.doc(roomId)\n\t\t\t\t.onSnapshot((snapshot) => {\n\t\t\t\t\tsetRoomName(snapshot.data().name);\n\t\t\t\t});\n\t\t\tdb.collection('rooms')\n\t\t\t\t.doc(roomId)\n\t\t\t\t.collection('message')\n\t\t\t\t.orderBy('time', 'asc')\n\t\t\t\t.onSnapshot((snapshot) =>\n\t\t\t\t\tsetMessages(snapshot.docs.map((doc) => doc.data()))\n\t\t\t\t);\n\t\t}\n\t}, [roomId]);\n\n\tuseEffect(() => {\n\t\tsetSeed(Math.floor(Math.random() * 5000));\n\t}, []);\n\n\tconst sendMessage = (e) => {\n\t\tif (input !== '') {\n\t\t\te.preventDefault();\n\n\t\t\tdb.collection('rooms').doc(roomId).collection('message').add({\n\t\t\t\tmessage: input,\n\t\t\t\tname: user.displayName,\n\t\t\t\ttime: firebase.firestore.FieldValue.serverTimestamp(),\n\t\t\t});\n\t\t\tsetInput('');\n\t\t}\n\t};\n\n\treturn (\n\t\t<div className='chat'>\n\t\t\t<div className='chat__header'>\n\t\t\t\t<Avatar src={`https://avatars.dicebear.com/api/human/${seed}.svg`} />\n\t\t\t\t<div className='chat__headerInfo'>\n\t\t\t\t\t<h3>{roomName}</h3>\n\t\t\t\t\t<p>\n\t\t\t\t\t\t{new Date(\n\t\t\t\t\t\t\tmessages[messages.length - 1]?.time?.toDate()\n\t\t\t\t\t\t).toUTCString()}\n\t\t\t\t\t</p>\n\t\t\t\t</div>\n\t\t\t\t<div className='chat__headerRight'>\n\t\t\t\t\t<IconButton>\n\t\t\t\t\t\t<DonutLargeIcon />\n\t\t\t\t\t</IconButton>\n\t\t\t\t\t<IconButton>\n\t\t\t\t\t\t<ChatIcon />\n\t\t\t\t\t</IconButton>\n\t\t\t\t\t<IconButton>\n\t\t\t\t\t\t<MoreVertIcon />\n\t\t\t\t\t</IconButton>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div className='chat__body'>\n\t\t\t\t<div className='chat__bodyContent'>\n\t\t\t\t\t<div className='chat__timestamp'>\n\t\t\t\t\t\t<p>{currentTime}</p>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t{messages.map((message, index) => (\n\t\t\t\t\t\t<div\n\t\t\t\t\t\t\tkey={index}\n\t\t\t\t\t\t\tclassName={`chat__info ${\n\t\t\t\t\t\t\t\tmessage.name === user.displayName && 'chat__receiver'\n\t\t\t\t\t\t\t}`}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\tclassName={`${\n\t\t\t\t\t\t\t\t\tmessage.name === user.displayName && 'chat__receiverIcon'\n\t\t\t\t\t\t\t\t}`}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<Avatar\n\t\t\t\t\t\t\t\t\tsrc={`https://avatars.dicebear.com/api/human/${seed}.svg`}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<p className='chat__message'>\n\t\t\t\t\t\t\t\t<span className='chat__name'>{message.name}</span>\n\t\t\t\t\t\t\t\t{message.message}\n\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t))}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div className='chat__footer'>\n\t\t\t\t<div className='chat__footerWrap'>\n\t\t\t\t\t<InsertEmoticonIcon />\n\t\t\t\t\t<form>\n\t\t\t\t\t\t<input\n\t\t\t\t\t\t\tvalue={input}\n\t\t\t\t\t\t\tonChange={(e) => {\n\t\t\t\t\t\t\t\tsetInput(e.target.value);\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\tmaxLength='200'\n\t\t\t\t\t\t\ttype='text'\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<button onClick={sendMessage} type='submit'></button>\n\t\t\t\t\t</form>\n\t\t\t\t\t<MicIcon />\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n"]},"metadata":{},"sourceType":"module"}