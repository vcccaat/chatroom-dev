{"ast":null,"code":"var _jsxFileName = \"/Users/sze/Desktop/clone-whatsapp/chatroom/src/SidebarChat.js\";\nimport React, { useEffect, useState } from 'react';\nimport { Avatar } from '@material-ui/core';\nimport './SidebarChat.css';\nimport db from './firebase';\nimport { Link } from 'react-router-dom';\n\nfunction SidebarChat({\n  addNewChat,\n  id,\n  name\n}) {\n  var _messages$2;\n\n  const [seed, setSeed] = useState('');\n  const [messages, setMessages] = useState('');\n  const [lastMessageTime, setLastMessageTime] = useState('');\n  useEffect(() => {\n    setSeed(Math.floor(Math.random() * 5000));\n  }, []);\n\n  const createChat = () => {\n    const roomName = prompt('请输入房间名称');\n\n    if (roomName) {\n      db.collection('rooms').add({\n        name: roomName\n      });\n    }\n  };\n\n  useEffect(() => {\n    if (id) {\n      db.collection('rooms').doc(id).collection('message').orderBy('time', 'desc').onSnapshot(snapshot => setMessages(snapshot.docs.map(doc => doc.data())));\n    }\n  }, [id]);\n  useEffect(() => {\n    var _messages$, _messages$$time;\n\n    const time = new Date((_messages$ = messages[0]) === null || _messages$ === void 0 ? void 0 : (_messages$$time = _messages$.time) === null || _messages$$time === void 0 ? void 0 : _messages$$time.toDate()).toUTCString();\n    console.log(time);\n    setLastMessageTime(time.slice(-9, -4));\n  }, [messages]);\n  return !addNewChat ? /*#__PURE__*/React.createElement(Link, {\n    to: `/rooms/${id}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"sidebarChat\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(Avatar, {\n    src: `https://avatars.dicebear.com/api/human/${seed}.svg`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"sidebarChat__info\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 6\n    }\n  }, name), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"sidebarChat__messageInfo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 6\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"sidebarChat__message\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }\n  }, (_messages$2 = messages[0]) === null || _messages$2 === void 0 ? void 0 : _messages$2.message), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"sidebarChat__timestamp\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }\n  }, lastMessageTime))))) : /*#__PURE__*/React.createElement(\"div\", {\n    onClick: createChat,\n    className: \"sidebarChat\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 4\n    }\n  }, \"add new chat\"));\n}\n\nexport default SidebarChat;","map":{"version":3,"sources":["/Users/sze/Desktop/clone-whatsapp/chatroom/src/SidebarChat.js"],"names":["React","useEffect","useState","Avatar","db","Link","SidebarChat","addNewChat","id","name","seed","setSeed","messages","setMessages","lastMessageTime","setLastMessageTime","Math","floor","random","createChat","roomName","prompt","collection","add","doc","orderBy","onSnapshot","snapshot","docs","map","data","time","Date","toDate","toUTCString","console","log","slice","message"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Avatar } from '@material-ui/core';\nimport './SidebarChat.css';\nimport db from './firebase';\nimport { Link } from 'react-router-dom';\n\nfunction SidebarChat({ addNewChat, id, name }) {\n\tconst [seed, setSeed] = useState('');\n\tconst [messages, setMessages] = useState('');\n\tconst [lastMessageTime, setLastMessageTime] = useState('');\n\n\tuseEffect(() => {\n\t\tsetSeed(Math.floor(Math.random() * 5000));\n\t}, []);\n\n\tconst createChat = () => {\n\t\tconst roomName = prompt('请输入房间名称');\n\t\tif (roomName) {\n\t\t\tdb.collection('rooms').add({\n\t\t\t\tname: roomName,\n\t\t\t});\n\t\t}\n\t};\n\n\tuseEffect(() => {\n\t\tif (id) {\n\t\t\tdb.collection('rooms')\n\t\t\t\t.doc(id)\n\t\t\t\t.collection('message')\n\t\t\t\t.orderBy('time', 'desc')\n\t\t\t\t.onSnapshot((snapshot) =>\n\t\t\t\t\tsetMessages(snapshot.docs.map((doc) => doc.data()))\n\t\t\t\t);\n\t\t}\n\t}, [id]);\n\n\tuseEffect(() => {\n\t\tconst time = new Date(messages[0]?.time?.toDate()).toUTCString();\n\t\tconsole.log(time);\n\t\tsetLastMessageTime(time.slice(-9, -4));\n\t}, [messages]);\n\n\treturn !addNewChat ? (\n\t\t<Link to={`/rooms/${id}`}>\n\t\t\t<div className='sidebarChat'>\n\t\t\t\t<Avatar src={`https://avatars.dicebear.com/api/human/${seed}.svg`} />\n\t\t\t\t<div className='sidebarChat__info'>\n\t\t\t\t\t<h2>{name}</h2>\n\t\t\t\t\t<div className='sidebarChat__messageInfo'>\n\t\t\t\t\t\t<div className='sidebarChat__message'>{messages[0]?.message}</div>\n\t\t\t\t\t\t<div className='sidebarChat__timestamp'>{lastMessageTime}</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</Link>\n\t) : (\n\t\t<div onClick={createChat} className='sidebarChat'>\n\t\t\t<h3>add new chat</h3>\n\t\t</div>\n\t);\n}\n\nexport default SidebarChat;\n"]},"metadata":{},"sourceType":"module"}