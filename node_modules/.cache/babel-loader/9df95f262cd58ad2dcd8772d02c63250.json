{"ast":null,"code":"var _jsxFileName = \"/Users/sze/Desktop/clone-whatsapp/chatroom/src/SidebarChat.js\";\nimport React, { useEffect, useState } from 'react';\nimport { Avatar } from '@material-ui/core';\nimport './SidebarChat.css';\nimport db from './firebase';\nimport { Link } from 'react-router-dom';\nimport { useStateValue } from './StateProvider';\n\nfunction SidebarChat({\n  addNewChat,\n  id,\n  name\n}) {\n  var _messages$2;\n\n  // const [seed, setSeed] = useState('');\n  const [messages, setMessages] = useState('');\n  const [lastMessageTime, setLastMessageTime] = useState('');\n  const [{\n    user\n  }, dispatch] = useStateValue();\n  const [roomName, setRoomName] = useState(''); // useEffect(() => {\n  // \tsetSeed(Math.floor(Math.random() * 5000));\n  // }, []);\n\n  const createChat = () => {\n    const roomName = prompt('请输入房间名称');\n\n    if (roomName) {\n      db.collection('rooms').add({\n        name: roomName\n      });\n      setRoomName(roomName);\n    }\n  };\n\n  useEffect(() => {\n    if (id) {\n      db.collection('rooms').doc(id).collection('message').orderBy('time', 'desc').onSnapshot(snapshot => setMessages(snapshot.docs.map(doc => doc.data())));\n    }\n  }, [id]);\n  useEffect(() => {\n    var _messages$, _messages$$time;\n\n    const today = new Date((_messages$ = messages[0]) === null || _messages$ === void 0 ? void 0 : (_messages$$time = _messages$.time) === null || _messages$$time === void 0 ? void 0 : _messages$$time.toDate());\n    console.log(today, 'today');\n    const displayTime = today == 'Invalid Date' ? '' : (today.getHours() < 10 ? '0' : '') + today.getHours() + ':' + (today.getMinutes() < 10 ? '0' : '') + today.getMinutes();\n    setLastMessageTime(displayTime);\n  }, [messages]);\n  return !addNewChat ? /*#__PURE__*/React.createElement(Link, {\n    to: `/rooms/${id}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"sidebarChat\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(Avatar, {\n    src: `https://avatars.dicebear.com/api/bottts/${roomName}.svg`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"sidebarChat__info\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 6\n    }\n  }, name), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"sidebarChat__messageInfo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 6\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"sidebarChat__message\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }\n  }, (_messages$2 = messages[0]) === null || _messages$2 === void 0 ? void 0 : _messages$2.message), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"sidebarChat__timestamp\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }\n  }, lastMessageTime))))) : /*#__PURE__*/React.createElement(\"div\", {\n    onClick: createChat,\n    className: \"sidebarChat\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 4\n    }\n  }, \"\\u521B\\u5EFA\\u65B0\\u623F\\u95F4\"));\n}\n\nexport default SidebarChat;","map":{"version":3,"sources":["/Users/sze/Desktop/clone-whatsapp/chatroom/src/SidebarChat.js"],"names":["React","useEffect","useState","Avatar","db","Link","useStateValue","SidebarChat","addNewChat","id","name","messages","setMessages","lastMessageTime","setLastMessageTime","user","dispatch","roomName","setRoomName","createChat","prompt","collection","add","doc","orderBy","onSnapshot","snapshot","docs","map","data","today","Date","time","toDate","console","log","displayTime","getHours","getMinutes","message"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,MAAT,QAAuB,mBAAvB;AACA,OAAO,mBAAP;AACA,OAAOC,EAAP,MAAe,YAAf;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,aAAT,QAA8B,iBAA9B;;AAEA,SAASC,WAAT,CAAqB;AAAEC,EAAAA,UAAF;AAAcC,EAAAA,EAAd;AAAkBC,EAAAA;AAAlB,CAArB,EAA+C;AAAA;;AAC9C;AACA,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BV,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACW,eAAD,EAAkBC,kBAAlB,IAAwCZ,QAAQ,CAAC,EAAD,CAAtD;AACA,QAAM,CAAC;AAAEa,IAAAA;AAAF,GAAD,EAAWC,QAAX,IAAuBV,aAAa,EAA1C;AACA,QAAM,CAACW,QAAD,EAAWC,WAAX,IAA0BhB,QAAQ,CAAC,EAAD,CAAxC,CAL8C,CAO9C;AACA;AACA;;AAEA,QAAMiB,UAAU,GAAG,MAAM;AACxB,UAAMF,QAAQ,GAAGG,MAAM,CAAC,SAAD,CAAvB;;AACA,QAAIH,QAAJ,EAAc;AACbb,MAAAA,EAAE,CAACiB,UAAH,CAAc,OAAd,EAAuBC,GAAvB,CAA2B;AAC1BZ,QAAAA,IAAI,EAAEO;AADoB,OAA3B;AAGAC,MAAAA,WAAW,CAACD,QAAD,CAAX;AACA;AACD,GARD;;AAUAhB,EAAAA,SAAS,CAAC,MAAM;AACf,QAAIQ,EAAJ,EAAQ;AACPL,MAAAA,EAAE,CAACiB,UAAH,CAAc,OAAd,EACEE,GADF,CACMd,EADN,EAEEY,UAFF,CAEa,SAFb,EAGEG,OAHF,CAGU,MAHV,EAGkB,MAHlB,EAIEC,UAJF,CAIcC,QAAD,IACXd,WAAW,CAACc,QAAQ,CAACC,IAAT,CAAcC,GAAd,CAAmBL,GAAD,IAASA,GAAG,CAACM,IAAJ,EAA3B,CAAD,CALb;AAOA;AACD,GAVQ,EAUN,CAACpB,EAAD,CAVM,CAAT;AAYAR,EAAAA,SAAS,CAAC,MAAM;AAAA;;AACf,UAAM6B,KAAK,GAAG,IAAIC,IAAJ,eAASpB,QAAQ,CAAC,CAAD,CAAjB,kEAAS,WAAaqB,IAAtB,oDAAS,gBAAmBC,MAAnB,EAAT,CAAd;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYL,KAAZ,EAAmB,OAAnB;AACA,UAAMM,WAAW,GAChBN,KAAK,IAAI,cAAT,GACG,EADH,GAEG,CAACA,KAAK,CAACO,QAAN,KAAmB,EAAnB,GAAwB,GAAxB,GAA8B,EAA/B,IACAP,KAAK,CAACO,QAAN,EADA,GAEA,GAFA,IAGCP,KAAK,CAACQ,UAAN,KAAqB,EAArB,GAA0B,GAA1B,GAAgC,EAHjC,IAIAR,KAAK,CAACQ,UAAN,EAPJ;AASAxB,IAAAA,kBAAkB,CAACsB,WAAD,CAAlB;AACA,GAbQ,EAaN,CAACzB,QAAD,CAbM,CAAT;AAeA,SAAO,CAACH,UAAD,gBACN,oBAAC,IAAD;AAAM,IAAA,EAAE,EAAG,UAASC,EAAG,EAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACC;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACC,oBAAC,MAAD;AACC,IAAA,GAAG,EAAG,2CAA0CQ,QAAS,MAD1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,eAIC;AAAK,IAAA,SAAS,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKP,IAAL,CADD,eAEC;AAAK,IAAA,SAAS,EAAC,0BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACC;AAAK,IAAA,SAAS,EAAC,sBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAuCC,QAAQ,CAAC,CAAD,CAA/C,gDAAuC,YAAa4B,OAApD,CADD,eAEC;AAAK,IAAA,SAAS,EAAC,wBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAyC1B,eAAzC,CAFD,CAFD,CAJD,CADD,CADM,gBAgBN;AAAK,IAAA,OAAO,EAAEM,UAAd;AAA0B,IAAA,SAAS,EAAC,aAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sCADD,CAhBD;AAoBA;;AAED,eAAeZ,WAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Avatar } from '@material-ui/core';\nimport './SidebarChat.css';\nimport db from './firebase';\nimport { Link } from 'react-router-dom';\nimport { useStateValue } from './StateProvider';\n\nfunction SidebarChat({ addNewChat, id, name }) {\n\t// const [seed, setSeed] = useState('');\n\tconst [messages, setMessages] = useState('');\n\tconst [lastMessageTime, setLastMessageTime] = useState('');\n\tconst [{ user }, dispatch] = useStateValue();\n\tconst [roomName, setRoomName] = useState('');\n\n\t// useEffect(() => {\n\t// \tsetSeed(Math.floor(Math.random() * 5000));\n\t// }, []);\n\n\tconst createChat = () => {\n\t\tconst roomName = prompt('请输入房间名称');\n\t\tif (roomName) {\n\t\t\tdb.collection('rooms').add({\n\t\t\t\tname: roomName,\n\t\t\t});\n\t\t\tsetRoomName(roomName);\n\t\t}\n\t};\n\n\tuseEffect(() => {\n\t\tif (id) {\n\t\t\tdb.collection('rooms')\n\t\t\t\t.doc(id)\n\t\t\t\t.collection('message')\n\t\t\t\t.orderBy('time', 'desc')\n\t\t\t\t.onSnapshot((snapshot) =>\n\t\t\t\t\tsetMessages(snapshot.docs.map((doc) => doc.data()))\n\t\t\t\t);\n\t\t}\n\t}, [id]);\n\n\tuseEffect(() => {\n\t\tconst today = new Date(messages[0]?.time?.toDate());\n\t\tconsole.log(today, 'today');\n\t\tconst displayTime =\n\t\t\ttoday == 'Invalid Date'\n\t\t\t\t? ''\n\t\t\t\t: (today.getHours() < 10 ? '0' : '') +\n\t\t\t\t  today.getHours() +\n\t\t\t\t  ':' +\n\t\t\t\t  (today.getMinutes() < 10 ? '0' : '') +\n\t\t\t\t  today.getMinutes();\n\n\t\tsetLastMessageTime(displayTime);\n\t}, [messages]);\n\n\treturn !addNewChat ? (\n\t\t<Link to={`/rooms/${id}`}>\n\t\t\t<div className='sidebarChat'>\n\t\t\t\t<Avatar\n\t\t\t\t\tsrc={`https://avatars.dicebear.com/api/bottts/${roomName}.svg`}\n\t\t\t\t/>\n\t\t\t\t<div className='sidebarChat__info'>\n\t\t\t\t\t<h2>{name}</h2>\n\t\t\t\t\t<div className='sidebarChat__messageInfo'>\n\t\t\t\t\t\t<div className='sidebarChat__message'>{messages[0]?.message}</div>\n\t\t\t\t\t\t<div className='sidebarChat__timestamp'>{lastMessageTime}</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</Link>\n\t) : (\n\t\t<div onClick={createChat} className='sidebarChat'>\n\t\t\t<h4>创建新房间</h4>\n\t\t</div>\n\t);\n}\n\nexport default SidebarChat;\n"]},"metadata":{},"sourceType":"module"}