{"version":3,"sources":["firebase.js","StateProvider.js","SidebarChat.js","Sidebar.js","Chat.js","reducer.js","Login.js","App.js","serviceWorker.js","index.js"],"names":["db","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","firestore","auth","GoogleAuthProvider","StateContext","createContext","StateProvider","reducer","initialState","children","Provider","value","useReducer","useStateValue","useContext","SidebarChat","addNewChat","id","name","useState","messages","setMessages","lastMessageTime","setLastMessageTime","user","setRoomName","checkDelete","setCheckDelete","useEffect","collection","doc","orderBy","onSnapshot","snapshot","docs","map","data","today","Date","time","toDate","displayTime","getHours","getMinutes","window","location","href","delete","then","refresh","onClick","roomName","prompt","add","className","to","Avatar","src","message","document","querySelector","style","display","Button","variant","color","Sidebar","rooms","setRooms","unsubscribe","displayName","localStorage","clear","reload","IconButton","room","key","Chat","input","setInput","roomId","useParams","currentTime","setcurrentTime","index","onChange","e","target","maxLength","type","preventDefault","trim","FieldValue","serverTimestamp","JSON","parse","getItem","actionTypes","state","action","console","log","setItem","stringify","Login","dispatch","email","setEmail","password","setPassword","setName","switchLogin","placeholder","signInWithEmailAndPassword","result","catch","error","alert","createUserWithEmailAndPassword","updateProfile","App","path","Boolean","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.278f1006.chunk.js","sourcesContent":["import firebase from 'firebase';\n\nconst firebaseConfig = {\n\tapiKey: 'AIzaSyCy6gePCn95u8zMOLT4UTORjrHDvhRrO2g',\n\tauthDomain: 'chat-49c1d.firebaseapp.com',\n\tdatabaseURL: 'https://chat-49c1d.firebaseio.com',\n\tprojectId: 'chat-49c1d',\n\tstorageBucket: 'chat-49c1d.appspot.com',\n\tmessagingSenderId: '689541832725',\n\tappId: '1:689541832725:web:a747e231a0e0f9998e2e1c',\n\tmeasurementId: 'G-H8CSC7SKMV',\n};\n\nconst firebaseApp = firebase.initializeApp(firebaseConfig);\nconst db = firebaseApp.firestore();\nconst auth = firebase.auth();\nconst provider = new firebase.auth.GoogleAuthProvider();\n\nexport { auth, provider };\nexport default db;\n","import React, { createContext, useContext, useReducer } from 'react';\n\nexport const StateContext = createContext();\n\nexport const StateProvider = ({ reducer, initialState, children }) => (\n\t<StateContext.Provider value={useReducer(reducer, initialState)}>\n\t\t{children}\n\t</StateContext.Provider>\n);\n\nexport const useStateValue = () => useContext(StateContext);\n","import React, { useEffect, useState } from 'react';\nimport { Avatar } from '@material-ui/core';\nimport './SidebarChat.css';\nimport db from './firebase';\nimport { Link } from 'react-router-dom';\nimport { useStateValue } from './StateProvider';\nimport AddBoxIcon from '@material-ui/icons/AddBox';\nimport ClearIcon from '@material-ui/icons/Clear';\nimport Modal from '@material-ui/core/Modal';\nimport Button from '@material-ui/core/Button';\n\nfunction SidebarChat({ addNewChat, id, name }) {\n\tconst [messages, setMessages] = useState('');\n\tconst [lastMessageTime, setLastMessageTime] = useState('');\n\tconst [{ user }, dispatch] = useStateValue();\n\tconst [roomName, setRoomName] = useState('');\n\tconst [checkDelete, setCheckDelete] = useState(false);\n\n\tconst createChat = () => {\n\t\tconst roomName = prompt('请输入房间名称');\n\t\tif (roomName) {\n\t\t\tdb.collection('rooms').add({\n\t\t\t\tname: roomName,\n\t\t\t});\n\t\t\tsetRoomName(roomName);\n\t\t}\n\t};\n\n\tuseEffect(() => {\n\t\tif (id) {\n\t\t\tdb.collection('rooms')\n\t\t\t\t.doc(id)\n\t\t\t\t.collection('message')\n\t\t\t\t.orderBy('time', 'desc')\n\t\t\t\t.onSnapshot((snapshot) =>\n\t\t\t\t\tsetMessages(snapshot.docs.map((doc) => doc.data()))\n\t\t\t\t);\n\t\t}\n\t}, [id]);\n\n\tuseEffect(() => {\n\t\tconst today = new Date(messages[0]?.time?.toDate());\n\t\tconst displayTime =\n\t\t\ttoday == 'Invalid Date'\n\t\t\t\t? ''\n\t\t\t\t: (today.getHours() < 10 ? '0' : '') +\n\t\t\t\t  today.getHours() +\n\t\t\t\t  ':' +\n\t\t\t\t  (today.getMinutes() < 10 ? '0' : '') +\n\t\t\t\t  today.getMinutes();\n\n\t\tsetLastMessageTime(displayTime);\n\t}, [messages]);\n\n\tuseEffect(() => {\n\t\tif (checkDelete) {\n\t\t\twindow.location.href = '/';\n\t\t\tdb.collection('rooms')\n\t\t\t\t.doc(id)\n\t\t\t\t.delete()\n\t\t\t\t.then(() => window.location.refresh());\n\t\t}\n\t}, [checkDelete]);\n\n\tconst deleteRoom = () => {\n\t\tdocument.querySelector('.modal').style.display = 'block';\n\t};\n\n\tconst confirmDelete = () => {\n\t\tsetCheckDelete(true);\n\t};\n\n\tconst cancelDelete = () => {\n\t\tdocument.querySelector('.modal').style.display = 'none';\n\t};\n\n\treturn !addNewChat ? (\n\t\t<Link to={`/rooms/${id}`}>\n\t\t\t<div className='sidebarChat'>\n\t\t\t\t<Avatar src={`https://avatars.dicebear.com/api/identicon/${id}.svg`} />\n\t\t\t\t<div className='sidebarChat__info'>\n\t\t\t\t\t<h2>{name}</h2>\n\t\t\t\t\t<div className='sidebarChat__messageInfo'>\n\t\t\t\t\t\t<div className='sidebarChat__message'>{messages[0]?.message}</div>\n\t\t\t\t\t\t<div className='sidebarChat__timestamp'>\n\t\t\t\t\t\t\t{lastMessageTime}\n\t\t\t\t\t\t\t<span onClick={deleteRoom}>\n\t\t\t\t\t\t\t\t<ClearIcon />\n\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<div className='modal__Container'>\n\t\t\t\t\t<div className='modal'>\n\t\t\t\t\t\t<h3>确认要删除群聊吗？</h3>\n\t\t\t\t\t\t<Button variant='outlined' color='primary' onClick={confirmDelete}>\n\t\t\t\t\t\t\t确认\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t<Button variant='outlined' color='primary' onClick={cancelDelete}>\n\t\t\t\t\t\t\t取消\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</Link>\n\t) : (\n\t\t<div onClick={createChat} className='sidebarChat'>\n\t\t\t<AddBoxIcon /> <p>创建新房间</p>\n\t\t</div>\n\t);\n}\n\nexport default SidebarChat;\n","import React, { useEffect, useState } from 'react';\nimport './Sidebar.css';\nimport { Avatar, IconButton } from '@material-ui/core';\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\n// import SearchOutlined from '@material-ui/icons/SearchOutlined';\nimport SidebarChat from './SidebarChat';\nimport db from './firebase';\nimport { useStateValue } from './StateProvider';\nimport { firestore } from 'firebase';\n\nfunction Sidebar() {\n\tconst [rooms, setRooms] = useState([]);\n\n\tconst [{ user }, dispatch] = useStateValue();\n\n\tuseEffect(() => {\n\t\tconst unsubscribe = db.collection('rooms').onSnapshot((snapshot) =>\n\t\t\tsetRooms(\n\t\t\t\tsnapshot.docs.map((doc) => ({\n\t\t\t\t\tid: doc.id,\n\t\t\t\t\tdata: doc.data(),\n\t\t\t\t}))\n\t\t\t)\n\t\t);\n\t\treturn () => {\n\t\t\tunsubscribe();\n\t\t};\n\t});\n\n\tconst exitAccount = () => {\n\t\tlocalStorage.clear();\n\t\twindow.location.reload();\n\t};\n\n\treturn (\n\t\t<div className='sidebar'>\n\t\t\t<div className='sidebar__header'>\n\t\t\t\t<Avatar\n\t\t\t\t\tsrc={`https://avatars.dicebear.com/api/bottts/${user.displayName}.svg`}\n\t\t\t\t/>\n\t\t\t\t<h2>{user.displayName}</h2>\n\t\t\t\t<div className='sidebar__headerRight' onClick={exitAccount}>\n\t\t\t\t\t<IconButton>\n\t\t\t\t\t\t<ExitToAppIcon />\n\t\t\t\t\t</IconButton>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t{/* <div className='sidebar__search'>\n\t\t\t\t<div className='sidebar__searchContainer'>\n\t\t\t\t\t<SearchOutlined />\n\t\t\t\t\t<input placeholder='搜索聊天房间' type='text' />\n\t\t\t\t</div>\n\t\t\t</div> */}\n\t\t\t<div className='sidebar__chats'>\n\t\t\t\t<SidebarChat addNewChat />\n\t\t\t\t{rooms.map((room) => (\n\t\t\t\t\t<SidebarChat key={room.id} id={room.id} name={room.data.name} />\n\t\t\t\t))}\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\nexport default Sidebar;\n","import React, { useEffect, useState } from 'react';\nimport { Avatar, IconButton } from '@material-ui/core';\nimport MoreHorizIcon from '@material-ui/icons/MoreHoriz';\nimport InsertEmoticonIcon from '@material-ui/icons/InsertEmoticon';\nimport MicIcon from '@material-ui/icons/Mic';\nimport { useParams } from 'react-router-dom';\nimport './Chat.css';\nimport db from './firebase';\nimport firebase from 'firebase';\nimport { useStateValue } from './StateProvider';\n\nexport default function Chat() {\n\tconst [input, setInput] = useState('');\n\tconst { roomId } = useParams();\n\tconst [roomName, setRoomName] = useState('');\n\tconst [messages, setMessages] = useState([]);\n\tconst [currentTime, setcurrentTime] = useState('');\n\tconst [{ user }, dispatch] = useStateValue();\n\n\tuseEffect(() => {\n\t\tconst today = new Date();\n\t\tconst time =\n\t\t\t(today.getHours() < 10 ? '0' : '') +\n\t\t\ttoday.getHours() +\n\t\t\t':' +\n\t\t\t(today.getMinutes() < 10 ? '0' : '') +\n\t\t\ttoday.getMinutes();\n\t\tsetcurrentTime(time);\n\t});\n\n\tuseEffect(() => {\n\t\tif (roomId) {\n\t\t\tdb.collection('rooms')\n\t\t\t\t.doc(roomId)\n\t\t\t\t.onSnapshot((snapshot) => {\n\t\t\t\t\tsetRoomName(snapshot.data().name);\n\t\t\t\t});\n\t\t\tdb.collection('rooms')\n\t\t\t\t.doc(roomId)\n\t\t\t\t.collection('message')\n\t\t\t\t.orderBy('time', 'asc')\n\t\t\t\t.onSnapshot((snapshot) =>\n\t\t\t\t\tsetMessages(snapshot.docs.map((doc) => doc.data()))\n\t\t\t\t);\n\t\t}\n\t}, [roomId]);\n\n\tconst sendMessage = (e) => {\n\t\tif (roomId) {\n\t\t\te.preventDefault();\n\t\t\tif (input.trim() !== '') {\n\t\t\t\tdb.collection('rooms').doc(roomId).collection('message').add({\n\t\t\t\t\tmessage: input,\n\t\t\t\t\tname: user.displayName,\n\t\t\t\t\ttime: firebase.firestore.FieldValue.serverTimestamp(),\n\t\t\t\t});\n\t\t\t\tsetInput('');\n\t\t\t}\n\t\t}\n\t};\n\n\treturn (\n\t\t<div className='chat'>\n\t\t\t<div className='chat__header'>\n\t\t\t\t<Avatar\n\t\t\t\t\tsrc={`https://avatars.dicebear.com/api/identicon/${roomId}.svg`}\n\t\t\t\t/>\n\t\t\t\t<div className='chat__headerInfo'>\n\t\t\t\t\t<h3>{roomName}</h3>\n\t\t\t\t</div>\n\t\t\t\t<div className='chat__headerRight'>\n\t\t\t\t\t<IconButton>\n\t\t\t\t\t\t<MoreHorizIcon />\n\t\t\t\t\t</IconButton>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div className='chat__body'>\n\t\t\t\t{messages.map((message, index) => (\n\t\t\t\t\t<div\n\t\t\t\t\t\tkey={index}\n\t\t\t\t\t\tclassName={`chat__info ${\n\t\t\t\t\t\t\tmessage.name === user.displayName && 'chat__receiver'\n\t\t\t\t\t\t}`}\n\t\t\t\t\t>\n\t\t\t\t\t\t<div\n\t\t\t\t\t\t\tclassName={`${\n\t\t\t\t\t\t\t\tmessage.name === user.displayName && 'chat__receiverIcon'\n\t\t\t\t\t\t\t}`}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<Avatar\n\t\t\t\t\t\t\t\tsrc={`https://avatars.dicebear.com/api/bottts/${\n\t\t\t\t\t\t\t\t\tmessage.name === user.displayName ? user.displayName : roomId\n\t\t\t\t\t\t\t\t}.svg`}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<p className='chat__message'>\n\t\t\t\t\t\t\t<span className='chat__name'>{message.name}</span>\n\t\t\t\t\t\t\t{message.message}\n\t\t\t\t\t\t</p>\n\t\t\t\t\t</div>\n\t\t\t\t))}\n\t\t\t\t<div className='chat__timestamp'>\n\t\t\t\t\t<p>{currentTime}</p>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div className='chat__footer'>\n\t\t\t\t<div className='chat__footerWrap'>\n\t\t\t\t\t<InsertEmoticonIcon />\n\t\t\t\t\t<form>\n\t\t\t\t\t\t<input\n\t\t\t\t\t\t\tvalue={input}\n\t\t\t\t\t\t\tonChange={(e) => {\n\t\t\t\t\t\t\t\tsetInput(e.target.value);\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\tmaxLength='200'\n\t\t\t\t\t\t\ttype='text'\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<button onClick={sendMessage} type='submit'></button>\n\t\t\t\t\t</form>\n\t\t\t\t\t<MicIcon />\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n","export const initialState = {\n\tuser: localStorage\n\t\t? JSON.parse(localStorage.getItem('myValueInLocalStorage'))\n\t\t: null,\n};\n\nexport const actionTypes = {\n\tSET_USER: 'SET_USER',\n};\n\nconst reducer = (state, action) => {\n\tconsole.log(action);\n\tlocalStorage.setItem('myValueInLocalStorage', JSON.stringify(action.user));\n\tswitch (action.type) {\n\t\tcase actionTypes.SET_USER:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tuser: action.user,\n\t\t\t};\n\t\tdefault:\n\t\t\treturn state;\n\t}\n};\n\nexport default reducer;\n","import React, { useState } from 'react';\nimport './Login.css';\nimport { auth, provider } from './firebase';\nimport { actionTypes } from './reducer';\nimport { useStateValue } from './StateProvider';\nimport firebase from 'firebase';\n\nfunction Login() {\n\tconst [{}, dispatch] = useStateValue();\n\tconst [email, setEmail] = useState('');\n\tconst [password, setPassword] = useState('');\n\tconst [name, setName] = useState('');\n\n\tconst signIn = () => {\n\t\tfirebase\n\t\t\t.auth()\n\t\t\t.signInWithEmailAndPassword(email, password)\n\t\t\t.then((result) => {\n\t\t\t\tdispatch({\n\t\t\t\t\ttype: actionTypes.SET_USER,\n\t\t\t\t\tuser: result.user,\n\t\t\t\t});\n\t\t\t})\n\t\t\t.catch((error) => alert(error.message));\n\t};\n\n\tconst switchSignup = () => {\n\t\tdocument.querySelector('.hideLogin').style.display = 'none';\n\t\tdocument.querySelector('.hideSignup').style.display = 'block';\n\t};\n\n\tconst switchLogin = () => {\n\t\tdocument.querySelector('.hideLogin').style.display = 'block';\n\t\tdocument.querySelector('.hideSignup').style.display = 'none';\n\t};\n\n\tconst signup = () => {\n\t\tfirebase\n\t\t\t.auth()\n\t\t\t.createUserWithEmailAndPassword(email, password)\n\t\t\t.then((result) => {\n\t\t\t\treturn result.user.updateProfile({\n\t\t\t\t\tdisplayName: name,\n\t\t\t\t});\n\t\t\t})\n\t\t\t.then(alert('成功注册啦！'))\n\t\t\t.catch((error) => alert(error.message));\n\n\t\tswitchLogin();\n\t};\n\n\treturn (\n\t\t<div className='login'>\n\t\t\t<div className='hideLogin'>\n\t\t\t\t<div className='login__container'>\n\t\t\t\t\t<h2>一起来聊天吧</h2>\n\t\t\t\t\t<input\n\t\t\t\t\t\tonChange={(e) => setEmail(e.target.value)}\n\t\t\t\t\t\tid='email'\n\t\t\t\t\t\ttype='email'\n\t\t\t\t\t\tplaceholder='邮箱'\n\t\t\t\t\t/>\n\t\t\t\t\t<input\n\t\t\t\t\t\tonChange={(e) => setPassword(e.target.value)}\n\t\t\t\t\t\tid='password'\n\t\t\t\t\t\ttype='password'\n\t\t\t\t\t\tplaceholder='密码'\n\t\t\t\t\t/>\n\t\t\t\t\t<button onClick={signIn}>登录账号</button>\n\t\t\t\t\t<span onClick={switchSignup}> 注册账号 </span>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div className='hideSignup'>\n\t\t\t\t<div className='login__container'>\n\t\t\t\t\t<h2>注册用户</h2>\n\t\t\t\t\t<input\n\t\t\t\t\t\tonChange={(e) => setName(e.target.value)}\n\t\t\t\t\t\tid='name'\n\t\t\t\t\t\ttype='text'\n\t\t\t\t\t\tplaceholder='用户名'\n\t\t\t\t\t/>\n\t\t\t\t\t<input\n\t\t\t\t\t\tonChange={(e) => setEmail(e.target.value)}\n\t\t\t\t\t\tid='email'\n\t\t\t\t\t\ttype='email'\n\t\t\t\t\t\tplaceholder='邮箱'\n\t\t\t\t\t/>\n\t\t\t\t\t<input\n\t\t\t\t\t\tonChange={(e) => setPassword(e.target.value)}\n\t\t\t\t\t\tid='password'\n\t\t\t\t\t\ttype='password'\n\t\t\t\t\t\tplaceholder='密码'\n\t\t\t\t\t/>\n\t\t\t\t\t<button onClick={signup}>注册</button>\n\t\t\t\t\t<button onClick={switchLogin}>返回登录页面</button>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\nexport default Login;\n","import React, { useState } from 'react';\nimport './App.css';\nimport Sidebar from './Sidebar';\nimport Chat from './Chat';\nimport Login from './Login';\nimport { useStateValue } from './StateProvider';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport firebase from 'firebase';\n\nfunction App() {\n\tconst [{ user }, dispatch] = useStateValue();\n\n\treturn (\n\t\t<div className='app'>\n\t\t\t{!user ? (\n\t\t\t\t<Login />\n\t\t\t) : (\n\t\t\t\t<div className='app__body'>\n\t\t\t\t\t<Router>\n\t\t\t\t\t\t<Sidebar />\n\t\t\t\t\t\t<Switch>\n\t\t\t\t\t\t\t<Route path='/rooms/:roomId'>\n\t\t\t\t\t\t\t\t<Chat />\n\t\t\t\t\t\t\t</Route>\n\n\t\t\t\t\t\t\t<Route path='/'>\n\t\t\t\t\t\t\t\t<Chat />\n\t\t\t\t\t\t\t</Route>\n\t\t\t\t\t\t</Switch>\n\t\t\t\t\t</Router>\n\t\t\t\t</div>\n\t\t\t)}\n\t\t</div>\n\t);\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport reducer, { initialState } from './reducer';\nimport { StateProvider } from './StateProvider';\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<StateProvider initialState={initialState} reducer={reducer}>\n\t\t\t<App />\n\t\t</StateProvider>\n\t</React.StrictMode>,\n\tdocument.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}